# Railway Environment Variables Template
# Copy these to Railway Service â†’ Variables

# ===== REQUIRED FOR RAILWAY DEPLOYMENT =====

# Database (Railway Postgres - use internal hostname)
DATABASE_URL=postgresql://postgres:bTkNrVMRztRIpXaItMVFRFzOailXdcXE@postgres.railway.internal:5432/railway?sslmode=disable

# HMAC Webhook Secret (generate strong random secret)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
WEBHOOK_SECRET=<generate-strong-random-32-char-secret>

# CORS Allowed Origins (CSV format)
CORS_ALLOWED_ORIGINS=https://pos-imagration-service-production.up.railway.app

# JWT Secret (min 32 chars)
JWT_SECRET=<generate-strong-jwt-secret-min-32-chars>

# ===== TIMEOUTS & LIMITS =====

REQUEST_TIMEOUT_MS=30000
CONNECTION_TIMEOUT_MS=60000
SHUTDOWN_GRACE_MS=15000

# Rate Limiting (per-tenant + IP)
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=900000

# ===== MONITORING =====

METRICS_ENABLED=true
PROMETHEUS_ENABLED=true

# ===== OPTIONAL (if using Supabase Auth) =====

# SUPABASE_URL=https://your-project.supabase.co
# SUPABASE_ANON_KEY=your-anon-key
# SUPABASE_SERVICE_ROLE_KEY=your-service-role-key

# ===== AUTOMATICALLY SET BY RAILWAY =====

# NODE_ENV=production (set in railway.toml)
# PORT=<auto-injected-by-railway>

# ===== NOTES =====

# 1. Railway will automatically inject PORT - don't set it manually
# 2. Use sslmode=disable for Railway's internal Postgres connection
# 3. Generate strong secrets for WEBHOOK_SECRET and JWT_SECRET
# 4. Update CORS_ALLOWED_ORIGINS with your actual domain after deployment
# 5. If adding admin UI, add its URL to CORS_ALLOWED_ORIGINS (comma-separated)
